
/*
 * 
 */

package com.partenaires.resanet.hotel;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.2
 * 2012-12-07T02:29:00.112+01:00
 * Generated source version: 2.3.2
 * 
 */


@WebServiceClient(name = "hotelService", 
                  wsdlLocation = "file:/E:/documents/projects/camel-cxf-example/src/main/resources/META-INF/wsdl/hotel.wsdl",
                  targetNamespace = "http://www.resanet.partenaires.com/hotel") 
public class HotelService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.resanet.partenaires.com/hotel", "hotelService");
    public final static QName HotelServicePort = new QName("http://www.resanet.partenaires.com/hotel", "hotelServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/E:/documents/projects/camel-cxf-example/src/main/resources/META-INF/wsdl/hotel.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/E:/documents/projects/camel-cxf-example/src/main/resources/META-INF/wsdl/hotel.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public HotelService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public HotelService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HotelService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns HotelEndPoint
     */
    @WebEndpoint(name = "hotelServicePort")
    public HotelEndPoint getHotelServicePort() {
        return super.getPort(HotelServicePort, HotelEndPoint.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HotelEndPoint
     */
    @WebEndpoint(name = "hotelServicePort")
    public HotelEndPoint getHotelServicePort(WebServiceFeature... features) {
        return super.getPort(HotelServicePort, HotelEndPoint.class, features);
    }

}
